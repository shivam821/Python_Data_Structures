# **Adjacency List**

An adjacency list represents a graph as an array of linked lists. The index of the array represents a vertex and each element in its linked list represents the other vertices that form an edge with the vertex.

![https://www.programiz.com/sites/tutorial2program/files/adjacency-list-graph.png](https://www.programiz.com/sites/tutorial2program/files/adjacency-list-graph.png)

We can represent this graph in the form of a linked list on a computer as shown below.

# Adjacency List
class Vertex():
  def __init__(self,data):
    self.vertex = data
    self.next = None

class Graph():
  def __init__(self,verticies):
    self.nV = verticies
    self.graph = [None] * self.nV

  def add_edge(self,src,dst):
    node = Vertex(dst)
    node.next = self.graph[src]
    self.graph[src] = node

    node = Vertex(src)
    node.next = self.graph[dst]
    self.graph[dst] = node

  def display(self):
    for i in range(self.nV):
      print("List of verticies {} : ".format(i))
      temp = self.graph[i]
      while temp:
        print("-> {}".format(temp.vertex))
        temp = temp.next
    print("\n")

if __name__ == "__main__":
  Ggraph = Graph(5)
  Ggraph.add_edge(0,1)
  Ggraph.add_edge(1,2)
  Ggraph.add_edge(2,3)
  Ggraph.add_edge(0,3)
  Ggraph.add_edge(0,1)
  Ggraph.add_edge(1,3)

  Ggraph.display()
